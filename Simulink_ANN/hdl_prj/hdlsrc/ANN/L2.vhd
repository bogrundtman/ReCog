-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\L2.vhd
-- Created: 2022-05-13 14:13:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: L2
-- Source Path: ANN/HDL_ANN/Enabled Subsystem/L2
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY L2 IS
  PORT( a                                 :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        w                                 :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
        b                                 :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        o                                 :   OUT   vector_of_std_logic_vector18(0 TO 1)  -- sfix18_En12 [2]
        );
END L2;


ARCHITECTURE rtl OF L2 IS

  -- Signals
  SIGNAL w_signed                         : matrix_of_signed18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
  SIGNAL s                                : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out                     : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL s_1                              : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out_1                   : vector_of_std_logic_vector18(0 TO 7);  -- ufix18 [8]
  SIGNAL selector_out_2                   : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL s_2                              : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL MMul_dot_product_mul_temp        : vector_of_signed36(0 TO 7);  -- sfix36_En24 [8]
  SIGNAL MMul_dot_product_out             : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL reshape_out                      : matrix_of_signed18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
  SIGNAL selector_out_3                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL selector_out_4                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL MMul_add_01_out                  : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL selector_out_5                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL MMul_add_12_out                  : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL b_signed                         : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL selector_out_6                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL s_3                              : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL MatrixMultiply_out1              : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Add_add_cast                     : vector_of_signed19(0 TO 1);  -- sfix19_En12 [2]
  SIGNAL Add_add_cast_1                   : vector_of_signed19(0 TO 1);  -- sfix19_En12 [2]
  SIGNAL Add_out1                         : vector_of_signed19(0 TO 1);  -- sfix19_En12 [2]
  SIGNAL Add_out1_0                       : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant_out1                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Add_out1_dtc                     : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Add_out1_dtc_0                   : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1_0                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Add_out1_1                       : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL switch_compare_2                 : std_logic;
  SIGNAL Add_out1_dtc_1                   : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1_1                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1                      : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]

BEGIN
  outputgen3: FOR k IN 0 TO 1 GENERATE
    outputgen4: FOR k1 IN 0 TO 3 GENERATE
      w_signed(k, k1) <= signed(w(k, k1));
    END GENERATE;
  END GENERATE;

  sGEN_LABEL1: FOR d1 IN 0 TO 3 GENERATE
    sGEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      s(d0 + (d1 * 2)) <= w_signed(d0, d1);
    END GENERATE;
  END GENERATE;

  selector_out(0) <= s(0);
  selector_out(1) <= s(2);
  selector_out(2) <= s(4);
  selector_out(3) <= s(6);
  selector_out(4) <= s(1);
  selector_out(5) <= s(3);
  selector_out(6) <= s(5);
  selector_out(7) <= s(7);

  s_1GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_1(d0) <= selector_out(d0);
  END GENERATE;

  selector_out_1(0) <= a(0);
  selector_out_1(1) <= a(1);
  selector_out_1(2) <= a(2);
  selector_out_1(3) <= a(3);
  selector_out_1(4) <= a(0);
  selector_out_1(5) <= a(1);
  selector_out_1(6) <= a(2);
  selector_out_1(7) <= a(3);

  outputgen2: FOR k IN 0 TO 7 GENERATE
    selector_out_2(k) <= signed(selector_out_1(k));
  END GENERATE;

  s_2GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_2(d0) <= selector_out_2(d0);
  END GENERATE;


  MMul_dot_product_out_gen: FOR t_0 IN 0 TO 7 GENERATE
    MMul_dot_product_mul_temp(t_0) <= s_1(t_0) * s_2(t_0);
    MMul_dot_product_out(t_0) <= MMul_dot_product_mul_temp(t_0)(29 DOWNTO 12);
  END GENERATE MMul_dot_product_out_gen;


  reshape_outGEN_LABEL1: FOR d1 IN 0 TO 1 GENERATE
    reshape_outGEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
      reshape_out(d0, d1) <= MMul_dot_product_out(d0 + (d1 * 4));
    END GENERATE;
  END GENERATE;

  select_0_output : PROCESS (reshape_out)
  BEGIN

    FOR t_01 IN 0 TO 1 LOOP
      selector_out_3(t_01) <= reshape_out(0, t_01);
    END LOOP;

  END PROCESS select_0_output;


  select_1_output : PROCESS (reshape_out)
  BEGIN

    FOR t_02 IN 0 TO 1 LOOP
      selector_out_4(t_02) <= reshape_out(1, t_02);
    END LOOP;

  END PROCESS select_1_output;



  MMul_add_01_out_gen: FOR t_03 IN 0 TO 1 GENERATE
    MMul_add_01_out(t_03) <= selector_out_3(t_03) + selector_out_4(t_03);
  END GENERATE MMul_add_01_out_gen;


  select_2_output : PROCESS (reshape_out)
  BEGIN

    FOR t_04 IN 0 TO 1 LOOP
      selector_out_5(t_04) <= reshape_out(2, t_04);
    END LOOP;

  END PROCESS select_2_output;



  MMul_add_12_out_gen: FOR t_05 IN 0 TO 1 GENERATE
    MMul_add_12_out(t_05) <= MMul_add_01_out(t_05) + selector_out_5(t_05);
  END GENERATE MMul_add_12_out_gen;


  outputgen1: FOR k IN 0 TO 1 GENERATE
    b_signed(k) <= signed(b(k));
  END GENERATE;

  select_3_output : PROCESS (reshape_out)
  BEGIN

    FOR t_06 IN 0 TO 1 LOOP
      selector_out_6(t_06) <= reshape_out(3, t_06);
    END LOOP;

  END PROCESS select_3_output;



  s_3_gen: FOR t_07 IN 0 TO 1 GENERATE
    s_3(t_07) <= MMul_add_12_out(t_07) + selector_out_6(t_07);
  END GENERATE s_3_gen;


  MatrixMultiply_out1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
    MatrixMultiply_out1(d0) <= s_3(d0);
  END GENERATE;


  Add_out1_gen: FOR t_08 IN 0 TO 1 GENERATE
    Add_add_cast(t_08) <= resize(b_signed(t_08), 19);
    Add_add_cast_1(t_08) <= resize(MatrixMultiply_out1(t_08), 19);
    Add_out1(t_08) <= Add_add_cast(t_08) + Add_add_cast_1(t_08);
  END GENERATE Add_out1_gen;


  Add_out1_0 <= Add_out1(0);

  
  switch_compare_1 <= '1' WHEN Add_out1_0 > to_signed(16#00000#, 19) ELSE
      '0';

  Constant_out1 <= to_signed(16#00000#, 18);


  Add_out1_dtc_gen: FOR ii IN 0 TO 1 GENERATE
    Add_out1_dtc(ii) <= Add_out1(ii)(17 DOWNTO 0);
  END GENERATE Add_out1_dtc_gen;


  Add_out1_dtc_0 <= Add_out1_dtc(0);

  
  Switch_out1_0 <= Constant_out1 WHEN switch_compare_1 = '0' ELSE
      Add_out1_dtc_0;

  Add_out1_1 <= Add_out1(1);

  
  switch_compare_2 <= '1' WHEN Add_out1_1 > to_signed(16#00000#, 19) ELSE
      '0';

  Add_out1_dtc_1 <= Add_out1_dtc(1);

  
  Switch_out1_1 <= Constant_out1 WHEN switch_compare_2 = '0' ELSE
      Add_out1_dtc_1;

  Switch_out1(0) <= Switch_out1_0;
  Switch_out1(1) <= Switch_out1_1;

  outputgen: FOR k IN 0 TO 1 GENERATE
    o(k) <= std_logic_vector(Switch_out1(k));
  END GENERATE;

END rtl;

