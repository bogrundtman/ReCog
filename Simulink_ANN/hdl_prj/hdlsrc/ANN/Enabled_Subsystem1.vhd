-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\Enabled_Subsystem1.vhd
-- Created: 2022-05-13 14:13:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Enabled_Subsystem1
-- Source Path: ANN/HDL_ANN/Enabled Subsystem1
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY Enabled_Subsystem1 IS
  PORT( x                                 :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        y                                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En12
        a1                                :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        a2                                :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        a3                                :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En12
        w1                                :   IN    matrix_of_std_logic_vector18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
        w2                                :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
        w3                                :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        b1                                :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        b2                                :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        b3                                :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En12
        alpha                             :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
        updated_w1                        :   OUT   matrix_of_std_logic_vector18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
        updated_w2                        :   OUT   matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
        updated_w3                        :   OUT   vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        updated_b1                        :   OUT   vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        updated_b2                        :   OUT   vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        updated_b3                        :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En12
        );
END Enabled_Subsystem1;


ARCHITECTURE rtl OF Enabled_Subsystem1 IS

  -- Component Declarations
  COMPONENT Subsystem
    PORT( e3                              :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          a2                              :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          w3                              :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          e2                              :   OUT   vector_of_std_logic_vector37(0 TO 1)  -- sfix37_En24 [2]
          );
  END COMPONENT;

  COMPONENT Subsystem1
    PORT( e2                              :   IN    vector_of_std_logic_vector37(0 TO 1);  -- sfix37_En24 [2]
          a1                              :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
          w2                              :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
          e1                              :   OUT   vector_of_std_logic_vector55(0 TO 3)  -- sfix55_En36 [4]
          );
  END COMPONENT;

  COMPONENT Subsystem5
    PORT( w1                              :   IN    matrix_of_std_logic_vector18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
          x                               :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          e1                              :   IN    vector_of_std_logic_vector55(0 TO 3);  -- sfix55_En36 [4]
          b1                              :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
          alpha                           :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          updated_b1                      :   OUT   vector_of_std_logic_vector74(0 TO 3);  -- sfix74_En54 [4]
          updated_w1                      :   OUT   matrix_of_std_logic_vector92(0 TO 3, 0 TO 1)  -- sfix92_En66 [4x2]
          );
  END COMPONENT;

  COMPONENT Subsystem3
    PORT( w2                              :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
          a1                              :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
          e2                              :   IN    vector_of_std_logic_vector37(0 TO 1);  -- sfix37_En24 [2]
          b2                              :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          alpha                           :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          updated_b2                      :   OUT   vector_of_std_logic_vector56(0 TO 1);  -- sfix56_En42 [2]
          updated_w2                      :   OUT   matrix_of_std_logic_vector74(0 TO 1, 0 TO 3)  -- sfix74_En54 [2x4]
          );
  END COMPONENT;

  COMPONENT Subsystem2
    PORT( w3                              :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          a2                              :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
          e3                              :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
          b3                              :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En12
          alpha                           :   IN    std_logic_vector(17 DOWNTO 0);  -- ufix18_En18
          updated_b3                      :   OUT   std_logic_vector(37 DOWNTO 0);  -- sfix38_En30
          updated_w3                      :   OUT   vector_of_std_logic_vector56(0 TO 1)  -- sfix56_En42 [2]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Subsystem
    USE ENTITY work.Subsystem(rtl);

  FOR ALL : Subsystem1
    USE ENTITY work.Subsystem1(rtl);

  FOR ALL : Subsystem5
    USE ENTITY work.Subsystem5(rtl);

  FOR ALL : Subsystem3
    USE ENTITY work.Subsystem3(rtl);

  FOR ALL : Subsystem2
    USE ENTITY work.Subsystem2(rtl);

  -- Signals
  SIGNAL a3_signed                        : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL y_signed                         : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL e3_sub_cast                      : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL e3_sub_cast_1                    : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL e3_out1                          : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Subsystem_out1                   : vector_of_std_logic_vector37(0 TO 1);  -- ufix37 [2]
  SIGNAL Subsystem1_out1                  : vector_of_std_logic_vector55(0 TO 3);  -- ufix55 [4]
  SIGNAL Subsystem5_out1                  : vector_of_std_logic_vector74(0 TO 3);  -- ufix74 [4]
  SIGNAL Subsystem5_out2                  : matrix_of_std_logic_vector92(0 TO 3, 0 TO 1);  -- ufix92 [4x2]
  SIGNAL Subsystem5_out2_signed           : matrix_of_signed92(0 TO 3, 0 TO 1);  -- sfix92_En66 [4x2]
  SIGNAL c25_Subsystem5_out2              : vector_of_signed92(0 TO 7);  -- sfix92_En66 [8]
  SIGNAL c25_Data_Type_Conversion6_out1   : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL Data_Type_Conversion6_out1       : matrix_of_signed18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
  SIGNAL Subsystem3_out1                  : vector_of_std_logic_vector56(0 TO 1);  -- ufix56 [2]
  SIGNAL Subsystem3_out2                  : matrix_of_std_logic_vector74(0 TO 1, 0 TO 3);  -- ufix74 [2x4]
  SIGNAL Subsystem3_out2_signed           : matrix_of_signed74(0 TO 1, 0 TO 3);  -- sfix74_En54 [2x4]
  SIGNAL c23_Subsystem3_out2              : vector_of_signed74(0 TO 7);  -- sfix74_En54 [8]
  SIGNAL c23_Data_Type_Conversion4_out1   : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL Data_Type_Conversion4_out1       : matrix_of_signed18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
  SIGNAL Subsystem2_out1                  : std_logic_vector(37 DOWNTO 0);  -- ufix38
  SIGNAL Subsystem2_out2                  : vector_of_std_logic_vector56(0 TO 1);  -- ufix56 [2]
  SIGNAL Subsystem2_out2_signed           : vector_of_signed56(0 TO 1);  -- sfix56_En42 [2]
  SIGNAL Data_Type_Conversion3_out1       : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Subsystem5_out1_signed           : vector_of_signed74(0 TO 3);  -- sfix74_En54 [4]
  SIGNAL Data_Type_Conversion_out1        : vector_of_signed18(0 TO 3);  -- sfix18_En12 [4]
  SIGNAL Subsystem3_out1_signed           : vector_of_signed56(0 TO 1);  -- sfix56_En42 [2]
  SIGNAL Data_Type_Conversion1_out1       : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Subsystem2_out1_signed           : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL Data_Type_Conversion2_out1       : signed(17 DOWNTO 0);  -- sfix18_En12

BEGIN
  u_Subsystem : Subsystem
    PORT MAP( e3 => std_logic_vector(e3_out1),  -- sfix19_En12
              a2 => a2,  -- sfix18_En12 [2]
              w3 => w3,  -- sfix18_En12 [2]
              e2 => Subsystem_out1  -- sfix37_En24 [2]
              );

  u_Subsystem1 : Subsystem1
    PORT MAP( e2 => Subsystem_out1,  -- sfix37_En24 [2]
              a1 => a1,  -- sfix18_En12 [4]
              w2 => w2,  -- sfix18_En12 [2x4]
              e1 => Subsystem1_out1  -- sfix55_En36 [4]
              );

  u_Subsystem5 : Subsystem5
    PORT MAP( w1 => w1,  -- sfix18_En12 [4x2]
              x => x,  -- sfix18_En12 [2]
              e1 => Subsystem1_out1,  -- sfix55_En36 [4]
              b1 => b1,  -- sfix18_En12 [4]
              alpha => alpha,  -- ufix18_En18
              updated_b1 => Subsystem5_out1,  -- sfix74_En54 [4]
              updated_w1 => Subsystem5_out2  -- sfix92_En66 [4x2]
              );

  u_Subsystem3 : Subsystem3
    PORT MAP( w2 => w2,  -- sfix18_En12 [2x4]
              a1 => a1,  -- sfix18_En12 [4]
              e2 => Subsystem_out1,  -- sfix37_En24 [2]
              b2 => b2,  -- sfix18_En12 [2]
              alpha => alpha,  -- ufix18_En18
              updated_b2 => Subsystem3_out1,  -- sfix56_En42 [2]
              updated_w2 => Subsystem3_out2  -- sfix74_En54 [2x4]
              );

  u_Subsystem2 : Subsystem2
    PORT MAP( w3 => w3,  -- sfix18_En12 [2]
              a2 => a2,  -- sfix18_En12 [2]
              e3 => std_logic_vector(e3_out1),  -- sfix19_En12
              b3 => b3,  -- sfix18_En12
              alpha => alpha,  -- ufix18_En18
              updated_b3 => Subsystem2_out1,  -- sfix38_En30
              updated_w3 => Subsystem2_out2  -- sfix56_En42 [2]
              );

  a3_signed <= signed(a3);

  y_signed <= signed(y);

  e3_sub_cast <= resize(a3_signed, 19);
  e3_sub_cast_1 <= resize(y_signed, 19);
  e3_out1 <= e3_sub_cast - e3_sub_cast_1;

  outputgen12: FOR k IN 0 TO 3 GENERATE
    outputgen13: FOR k1 IN 0 TO 1 GENERATE
      Subsystem5_out2_signed(k, k1) <= signed(Subsystem5_out2(k, k1));
    END GENERATE;
  END GENERATE;

  c25_Subsystem5_out2GEN_LABEL1: FOR d1 IN 0 TO 1 GENERATE
    c25_Subsystem5_out2GEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
      c25_Subsystem5_out2(d0 + (d1 * 4)) <= Subsystem5_out2_signed(d0, d1);
    END GENERATE;
  END GENERATE;


  c25_Data_Type_Conversion6_out1_gen: FOR ii IN 0 TO 7 GENERATE
    c25_Data_Type_Conversion6_out1(ii) <= c25_Subsystem5_out2(ii)(71 DOWNTO 54);
  END GENERATE c25_Data_Type_Conversion6_out1_gen;


  Data_Type_Conversion6_out1GEN_LABEL1: FOR d1 IN 0 TO 1 GENERATE
    Data_Type_Conversion6_out1GEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
      Data_Type_Conversion6_out1(d0, d1) <= c25_Data_Type_Conversion6_out1(d0 + (d1 * 4));
    END GENERATE;
  END GENERATE;

  outputgen10: FOR k IN 0 TO 3 GENERATE
    outputgen11: FOR k1 IN 0 TO 1 GENERATE
      updated_w1(k, k1) <= std_logic_vector(Data_Type_Conversion6_out1(k, k1));
    END GENERATE;
  END GENERATE;

  outputgen8: FOR k IN 0 TO 1 GENERATE
    outputgen9: FOR k1 IN 0 TO 3 GENERATE
      Subsystem3_out2_signed(k, k1) <= signed(Subsystem3_out2(k, k1));
    END GENERATE;
  END GENERATE;

  c23_Subsystem3_out2GEN_LABEL1: FOR d1 IN 0 TO 3 GENERATE
    c23_Subsystem3_out2GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      c23_Subsystem3_out2(d0 + (d1 * 2)) <= Subsystem3_out2_signed(d0, d1);
    END GENERATE;
  END GENERATE;


  c23_Data_Type_Conversion4_out1_gen: FOR ii1 IN 0 TO 7 GENERATE
    c23_Data_Type_Conversion4_out1(ii1) <= c23_Subsystem3_out2(ii1)(59 DOWNTO 42);
  END GENERATE c23_Data_Type_Conversion4_out1_gen;


  Data_Type_Conversion4_out1GEN_LABEL1: FOR d1 IN 0 TO 3 GENERATE
    Data_Type_Conversion4_out1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      Data_Type_Conversion4_out1(d0, d1) <= c23_Data_Type_Conversion4_out1(d0 + (d1 * 2));
    END GENERATE;
  END GENERATE;

  outputgen6: FOR k IN 0 TO 1 GENERATE
    outputgen7: FOR k1 IN 0 TO 3 GENERATE
      updated_w2(k, k1) <= std_logic_vector(Data_Type_Conversion4_out1(k, k1));
    END GENERATE;
  END GENERATE;

  outputgen5: FOR k IN 0 TO 1 GENERATE
    Subsystem2_out2_signed(k) <= signed(Subsystem2_out2(k));
  END GENERATE;


  Data_Type_Conversion3_out1_gen: FOR ii2 IN 0 TO 1 GENERATE
    Data_Type_Conversion3_out1(ii2) <= Subsystem2_out2_signed(ii2)(47 DOWNTO 30);
  END GENERATE Data_Type_Conversion3_out1_gen;


  outputgen4: FOR k IN 0 TO 1 GENERATE
    updated_w3(k) <= std_logic_vector(Data_Type_Conversion3_out1(k));
  END GENERATE;

  outputgen3: FOR k IN 0 TO 3 GENERATE
    Subsystem5_out1_signed(k) <= signed(Subsystem5_out1(k));
  END GENERATE;


  Data_Type_Conversion_out1_gen: FOR ii3 IN 0 TO 3 GENERATE
    Data_Type_Conversion_out1(ii3) <= Subsystem5_out1_signed(ii3)(59 DOWNTO 42);
  END GENERATE Data_Type_Conversion_out1_gen;


  outputgen2: FOR k IN 0 TO 3 GENERATE
    updated_b1(k) <= std_logic_vector(Data_Type_Conversion_out1(k));
  END GENERATE;

  outputgen1: FOR k IN 0 TO 1 GENERATE
    Subsystem3_out1_signed(k) <= signed(Subsystem3_out1(k));
  END GENERATE;


  Data_Type_Conversion1_out1_gen: FOR ii4 IN 0 TO 1 GENERATE
    Data_Type_Conversion1_out1(ii4) <= Subsystem3_out1_signed(ii4)(47 DOWNTO 30);
  END GENERATE Data_Type_Conversion1_out1_gen;


  outputgen: FOR k IN 0 TO 1 GENERATE
    updated_b2(k) <= std_logic_vector(Data_Type_Conversion1_out1(k));
  END GENERATE;

  Subsystem2_out1_signed <= signed(Subsystem2_out1);

  Data_Type_Conversion2_out1 <= Subsystem2_out1_signed(35 DOWNTO 18);

  updated_b3 <= std_logic_vector(Data_Type_Conversion2_out1);

END rtl;

