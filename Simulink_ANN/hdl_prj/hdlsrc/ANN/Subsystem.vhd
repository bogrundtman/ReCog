-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\Subsystem.vhd
-- Created: 2022-05-13 14:13:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem
-- Source Path: ANN/HDL_ANN/Enabled Subsystem1/Subsystem
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY Subsystem IS
  PORT( e3                                :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En12
        a2                                :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        w3                                :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        e2                                :   OUT   vector_of_std_logic_vector37(0 TO 1)  -- sfix37_En24 [2]
        );
END Subsystem;


ARCHITECTURE rtl OF Subsystem IS

  -- Signals
  SIGNAL w3_signed                        : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Transpose_out1                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL e3_signed                        : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL MatrixMultiply_out1              : vector_of_signed37(0 TO 1);  -- sfix37_En24 [2]
  SIGNAL a2_signed                        : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL Product_mul_temp                 : vector_of_signed55(0 TO 1);  -- sfix55_En36 [2]
  SIGNAL Product_out1                     : vector_of_signed37(0 TO 1);  -- sfix37_En24 [2]

BEGIN
  outputgen2: FOR k IN 0 TO 1 GENERATE
    w3_signed(k) <= signed(w3(k));
  END GENERATE;

  Transpose_out1 <= w3_signed;

  e3_signed <= signed(e3);


  MatrixMultiply_out1_gen: FOR t_0 IN 0 TO 1 GENERATE
    MatrixMultiply_out1(t_0) <= Transpose_out1(t_0) * e3_signed;
  END GENERATE MatrixMultiply_out1_gen;


  outputgen1: FOR k IN 0 TO 1 GENERATE
    a2_signed(k) <= signed(a2(k));
  END GENERATE;


  Product_out1_gen: FOR t_01 IN 0 TO 1 GENERATE
    Product_mul_temp(t_01) <= MatrixMultiply_out1(t_01) * a2_signed(t_01);
    Product_out1(t_01) <= Product_mul_temp(t_01)(48 DOWNTO 12);
  END GENERATE Product_out1_gen;


  outputgen: FOR k IN 0 TO 1 GENERATE
    e2(k) <= std_logic_vector(Product_out1(k));
  END GENERATE;

END rtl;

