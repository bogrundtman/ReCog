-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\Subsystem4.vhd
-- Created: 2022-05-21 15:41:35
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem4
-- Source Path: ANN/HDL_ANN/Train/Subsystem4
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY Subsystem4 IS
  PORT( e2                                :   IN    vector_of_std_logic_vector73(0 TO 1);  -- sfix73_En48 [2]
        z1                                :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        w2                                :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
        e1                                :   OUT   vector_of_std_logic_vector91(0 TO 3)  -- sfix91_En60 [4]
        );
END Subsystem4;


ARCHITECTURE rtl OF Subsystem4 IS

  -- Signals
  SIGNAL w2_signed                        : matrix_of_signed18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
  SIGNAL Transpose_out1                   : matrix_of_signed18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
  SIGNAL s                                : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out                     : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL s_1                              : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out_1                   : vector_of_std_logic_vector73(0 TO 7);  -- ufix73 [8]
  SIGNAL selector_out_2                   : vector_of_signed73(0 TO 7);  -- sfix73_En48 [8]
  SIGNAL s_2                              : vector_of_signed73(0 TO 7);  -- sfix73_En48 [8]
  SIGNAL MMul_dot_product_out             : vector_of_signed91(0 TO 7);  -- sfix91_En60 [8]
  SIGNAL reshape_out                      : matrix_of_signed91(0 TO 1, 0 TO 3);  -- sfix91_En60 [2x4]
  SIGNAL selector_out_3                   : vector_of_signed91(0 TO 3);  -- sfix91_En60 [4]
  SIGNAL z1_0                             : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant1_out1                   : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Constant_out1                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1_0                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL z1_1                             : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL switch_compare_2                 : std_logic;
  SIGNAL Switch_out1_1                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL z1_2                             : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL switch_compare_3                 : std_logic;
  SIGNAL Switch_out1_2                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL z1_3                             : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL switch_compare_4                 : std_logic;
  SIGNAL selector_out_4                   : vector_of_signed91(0 TO 3);  -- sfix91_En60 [4]
  SIGNAL s_3                              : vector_of_signed91(0 TO 3);  -- sfix91_En60 [4]
  SIGNAL MatrixMultiply_out1              : vector_of_signed91(0 TO 3);  -- sfix91_En60 [4]
  SIGNAL Switch_out1_3                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1                      : vector_of_signed18(0 TO 3);  -- sfix18_En12 [4]
  SIGNAL Product_mul_temp                 : vector_of_signed109(0 TO 3);  -- sfix109_En72 [4]
  SIGNAL Product_out1                     : vector_of_signed91(0 TO 3);  -- sfix91_En60 [4]

BEGIN
  outputgen2: FOR k IN 0 TO 1 GENERATE
    outputgen3: FOR k1 IN 0 TO 3 GENERATE
      w2_signed(k, k1) <= signed(w2(k, k1));
    END GENERATE;
  END GENERATE;

  Transpose_output : PROCESS (w2_signed)
  BEGIN

    FOR t_1 IN 0 TO 1 LOOP
      FOR t_0 IN 0 TO 3 LOOP
        Transpose_out1(t_0, t_1) <= w2_signed(t_1, t_0);
      END LOOP;
    END LOOP;

  END PROCESS Transpose_output;


  sGEN_LABEL1: FOR d1 IN 0 TO 1 GENERATE
    sGEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
      s(d0 + (d1 * 4)) <= Transpose_out1(d0, d1);
    END GENERATE;
  END GENERATE;

  selector_out(0) <= s(0);
  selector_out(1) <= s(4);
  selector_out(2) <= s(1);
  selector_out(3) <= s(5);
  selector_out(4) <= s(2);
  selector_out(5) <= s(6);
  selector_out(6) <= s(3);
  selector_out(7) <= s(7);

  s_1GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_1(d0) <= selector_out(d0);
  END GENERATE;

  selector_out_1(0) <= e2(0);
  selector_out_1(1) <= e2(1);
  selector_out_1(2) <= e2(0);
  selector_out_1(3) <= e2(1);
  selector_out_1(4) <= e2(0);
  selector_out_1(5) <= e2(1);
  selector_out_1(6) <= e2(0);
  selector_out_1(7) <= e2(1);

  outputgen1: FOR k IN 0 TO 7 GENERATE
    selector_out_2(k) <= signed(selector_out_1(k));
  END GENERATE;

  s_2GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_2(d0) <= selector_out_2(d0);
  END GENERATE;


  MMul_dot_product_out_gen: FOR t_01 IN 0 TO 7 GENERATE
    MMul_dot_product_out(t_01) <= s_1(t_01) * s_2(t_01);
  END GENERATE MMul_dot_product_out_gen;


  reshape_outGEN_LABEL1: FOR d1 IN 0 TO 3 GENERATE
    reshape_outGEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      reshape_out(d0, d1) <= MMul_dot_product_out(d0 + (d1 * 2));
    END GENERATE;
  END GENERATE;

  select_0_output : PROCESS (reshape_out)
  BEGIN

    FOR t_02 IN 0 TO 3 LOOP
      selector_out_3(t_02) <= reshape_out(0, t_02);
    END LOOP;

  END PROCESS select_0_output;


  z1_0 <= signed(z1(0));

  
  switch_compare_1 <= '1' WHEN z1_0 > to_signed(16#00000#, 18) ELSE
      '0';

  Constant1_out1 <= to_signed(16#0019A#, 18);

  Constant_out1 <= to_signed(16#01000#, 18);

  
  Switch_out1_0 <= Constant1_out1 WHEN switch_compare_1 = '0' ELSE
      Constant_out1;

  z1_1 <= signed(z1(1));

  
  switch_compare_2 <= '1' WHEN z1_1 > to_signed(16#00000#, 18) ELSE
      '0';

  
  Switch_out1_1 <= Constant1_out1 WHEN switch_compare_2 = '0' ELSE
      Constant_out1;

  z1_2 <= signed(z1(2));

  
  switch_compare_3 <= '1' WHEN z1_2 > to_signed(16#00000#, 18) ELSE
      '0';

  
  Switch_out1_2 <= Constant1_out1 WHEN switch_compare_3 = '0' ELSE
      Constant_out1;

  z1_3 <= signed(z1(3));

  
  switch_compare_4 <= '1' WHEN z1_3 > to_signed(16#00000#, 18) ELSE
      '0';

  select_1_output : PROCESS (reshape_out)
  BEGIN

    FOR t_03 IN 0 TO 3 LOOP
      selector_out_4(t_03) <= reshape_out(1, t_03);
    END LOOP;

  END PROCESS select_1_output;



  s_3_gen: FOR t_04 IN 0 TO 3 GENERATE
    s_3(t_04) <= selector_out_3(t_04) + selector_out_4(t_04);
  END GENERATE s_3_gen;


  MatrixMultiply_out1GEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
    MatrixMultiply_out1(d0) <= s_3(d0);
  END GENERATE;

  
  Switch_out1_3 <= Constant1_out1 WHEN switch_compare_4 = '0' ELSE
      Constant_out1;

  Switch_out1(0) <= Switch_out1_0;
  Switch_out1(1) <= Switch_out1_1;
  Switch_out1(2) <= Switch_out1_2;
  Switch_out1(3) <= Switch_out1_3;


  Product_out1_gen: FOR t_05 IN 0 TO 3 GENERATE
    Product_mul_temp(t_05) <= MatrixMultiply_out1(t_05) * Switch_out1(t_05);
    Product_out1(t_05) <= Product_mul_temp(t_05)(102 DOWNTO 12);
  END GENERATE Product_out1_gen;


  outputgen: FOR k IN 0 TO 3 GENERATE
    e1(k) <= std_logic_vector(Product_out1(k));
  END GENERATE;

END rtl;

