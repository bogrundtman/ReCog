-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\L3.vhd
-- Created: 2022-05-13 14:13:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: L3
-- Source Path: ANN/HDL_ANN/Enabled Subsystem/L3
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY L3 IS
  PORT( a                                 :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        w                                 :   IN    vector_of_std_logic_vector18(0 TO 1);  -- sfix18_En12 [2]
        b                                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En12
        o                                 :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En12
        );
END L3;


ARCHITECTURE rtl OF L3 IS

  -- Signals
  SIGNAL selector_out                     : vector_of_std_logic_vector18(0 TO 1);  -- ufix18 [2]
  SIGNAL selector_out_1                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL s                                : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL selector_out_2                   : vector_of_std_logic_vector18(0 TO 1);  -- ufix18 [2]
  SIGNAL selector_out_3                   : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL s_1                              : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL MMul_dot_product_mul_temp        : vector_of_signed36(0 TO 1);  -- sfix36_En24 [2]
  SIGNAL MMul_dot_product_out             : vector_of_signed18(0 TO 1);  -- sfix18_En12 [2]
  SIGNAL MMul_dot_product_out_0           : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL b_signed                         : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL MMul_dot_product_out_1           : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL MatrixMultiply_out1              : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Add_add_cast                     : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Add_add_cast_1                   : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL Add_out1                         : signed(18 DOWNTO 0);  -- sfix19_En12
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Constant_out1                    : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Add_out1_dtc                     : signed(17 DOWNTO 0);  -- sfix18_En12
  SIGNAL Switch_out1                      : signed(17 DOWNTO 0);  -- sfix18_En12

BEGIN
  selector_out(0) <= w(0);
  selector_out(1) <= w(1);

  outputgen1: FOR k IN 0 TO 1 GENERATE
    selector_out_1(k) <= signed(selector_out(k));
  END GENERATE;

  sGEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
    s(d0) <= selector_out_1(d0);
  END GENERATE;

  selector_out_2(0) <= a(0);
  selector_out_2(1) <= a(1);

  outputgen: FOR k IN 0 TO 1 GENERATE
    selector_out_3(k) <= signed(selector_out_2(k));
  END GENERATE;

  s_1GEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
    s_1(d0) <= selector_out_3(d0);
  END GENERATE;


  MMul_dot_product_out_gen: FOR t_0 IN 0 TO 1 GENERATE
    MMul_dot_product_mul_temp(t_0) <= s(t_0) * s_1(t_0);
    MMul_dot_product_out(t_0) <= MMul_dot_product_mul_temp(t_0)(29 DOWNTO 12);
  END GENERATE MMul_dot_product_out_gen;


  MMul_dot_product_out_0 <= MMul_dot_product_out(0);

  b_signed <= signed(b);

  MMul_dot_product_out_1 <= MMul_dot_product_out(1);

  MatrixMultiply_out1 <= MMul_dot_product_out_0 + MMul_dot_product_out_1;

  Add_add_cast <= resize(b_signed, 19);
  Add_add_cast_1 <= resize(MatrixMultiply_out1, 19);
  Add_out1 <= Add_add_cast + Add_add_cast_1;

  
  switch_compare_1 <= '1' WHEN Add_out1 > to_signed(16#00000#, 19) ELSE
      '0';

  Constant_out1 <= to_signed(16#00000#, 18);

  Add_out1_dtc <= Add_out1(17 DOWNTO 0);

  
  Switch_out1 <= Constant_out1 WHEN switch_compare_1 = '0' ELSE
      Add_out1_dtc;

  o <= std_logic_vector(Switch_out1);

END rtl;

