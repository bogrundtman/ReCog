-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\ANN\Subsystem1.vhd
-- Created: 2022-05-13 14:13:53
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Subsystem1
-- Source Path: ANN/HDL_ANN/Enabled Subsystem1/Subsystem1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HDL_ANN_pkg.ALL;

ENTITY Subsystem1 IS
  PORT( e2                                :   IN    vector_of_std_logic_vector37(0 TO 1);  -- sfix37_En24 [2]
        a1                                :   IN    vector_of_std_logic_vector18(0 TO 3);  -- sfix18_En12 [4]
        w2                                :   IN    matrix_of_std_logic_vector18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
        e1                                :   OUT   vector_of_std_logic_vector55(0 TO 3)  -- sfix55_En36 [4]
        );
END Subsystem1;


ARCHITECTURE rtl OF Subsystem1 IS

  -- Signals
  SIGNAL w2_signed                        : matrix_of_signed18(0 TO 1, 0 TO 3);  -- sfix18_En12 [2x4]
  SIGNAL Transpose_out1                   : matrix_of_signed18(0 TO 3, 0 TO 1);  -- sfix18_En12 [4x2]
  SIGNAL s                                : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out                     : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL s_1                              : vector_of_signed18(0 TO 7);  -- sfix18_En12 [8]
  SIGNAL selector_out_1                   : vector_of_std_logic_vector37(0 TO 7);  -- ufix37 [8]
  SIGNAL selector_out_2                   : vector_of_signed37(0 TO 7);  -- sfix37_En24 [8]
  SIGNAL s_2                              : vector_of_signed37(0 TO 7);  -- sfix37_En24 [8]
  SIGNAL MMul_dot_product_out             : vector_of_signed55(0 TO 7);  -- sfix55_En36 [8]
  SIGNAL reshape_out                      : matrix_of_signed55(0 TO 1, 0 TO 3);  -- sfix55_En36 [2x4]
  SIGNAL selector_out_3                   : vector_of_signed55(0 TO 3);  -- sfix55_En36 [4]
  SIGNAL selector_out_4                   : vector_of_signed55(0 TO 3);  -- sfix55_En36 [4]
  SIGNAL s_3                              : vector_of_signed55(0 TO 3);  -- sfix55_En36 [4]
  SIGNAL MatrixMultiply_out1              : vector_of_signed55(0 TO 3);  -- sfix55_En36 [4]
  SIGNAL a1_signed                        : vector_of_signed18(0 TO 3);  -- sfix18_En12 [4]
  SIGNAL Product_mul_temp                 : vector_of_signed73(0 TO 3);  -- sfix73_En48 [4]
  SIGNAL Product_out1                     : vector_of_signed55(0 TO 3);  -- sfix55_En36 [4]

BEGIN
  outputgen3: FOR k IN 0 TO 1 GENERATE
    outputgen4: FOR k1 IN 0 TO 3 GENERATE
      w2_signed(k, k1) <= signed(w2(k, k1));
    END GENERATE;
  END GENERATE;

  Transpose_output : PROCESS (w2_signed)
  BEGIN

    FOR t_1 IN 0 TO 1 LOOP
      FOR t_0 IN 0 TO 3 LOOP
        Transpose_out1(t_0, t_1) <= w2_signed(t_1, t_0);
      END LOOP;
    END LOOP;

  END PROCESS Transpose_output;


  sGEN_LABEL1: FOR d1 IN 0 TO 1 GENERATE
    sGEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
      s(d0 + (d1 * 4)) <= Transpose_out1(d0, d1);
    END GENERATE;
  END GENERATE;

  selector_out(0) <= s(0);
  selector_out(1) <= s(4);
  selector_out(2) <= s(1);
  selector_out(3) <= s(5);
  selector_out(4) <= s(2);
  selector_out(5) <= s(6);
  selector_out(6) <= s(3);
  selector_out(7) <= s(7);

  s_1GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_1(d0) <= selector_out(d0);
  END GENERATE;

  selector_out_1(0) <= e2(0);
  selector_out_1(1) <= e2(1);
  selector_out_1(2) <= e2(0);
  selector_out_1(3) <= e2(1);
  selector_out_1(4) <= e2(0);
  selector_out_1(5) <= e2(1);
  selector_out_1(6) <= e2(0);
  selector_out_1(7) <= e2(1);

  outputgen2: FOR k IN 0 TO 7 GENERATE
    selector_out_2(k) <= signed(selector_out_1(k));
  END GENERATE;

  s_2GEN_LABEL: FOR d0 IN 0 TO 7 GENERATE
    s_2(d0) <= selector_out_2(d0);
  END GENERATE;


  MMul_dot_product_out_gen: FOR t_01 IN 0 TO 7 GENERATE
    MMul_dot_product_out(t_01) <= s_1(t_01) * s_2(t_01);
  END GENERATE MMul_dot_product_out_gen;


  reshape_outGEN_LABEL1: FOR d1 IN 0 TO 3 GENERATE
    reshape_outGEN_LABEL: FOR d0 IN 0 TO 1 GENERATE
      reshape_out(d0, d1) <= MMul_dot_product_out(d0 + (d1 * 2));
    END GENERATE;
  END GENERATE;

  select_0_output : PROCESS (reshape_out)
  BEGIN

    FOR t_02 IN 0 TO 3 LOOP
      selector_out_3(t_02) <= reshape_out(0, t_02);
    END LOOP;

  END PROCESS select_0_output;


  select_1_output : PROCESS (reshape_out)
  BEGIN

    FOR t_03 IN 0 TO 3 LOOP
      selector_out_4(t_03) <= reshape_out(1, t_03);
    END LOOP;

  END PROCESS select_1_output;



  s_3_gen: FOR t_04 IN 0 TO 3 GENERATE
    s_3(t_04) <= selector_out_3(t_04) + selector_out_4(t_04);
  END GENERATE s_3_gen;


  MatrixMultiply_out1GEN_LABEL: FOR d0 IN 0 TO 3 GENERATE
    MatrixMultiply_out1(d0) <= s_3(d0);
  END GENERATE;

  outputgen1: FOR k IN 0 TO 3 GENERATE
    a1_signed(k) <= signed(a1(k));
  END GENERATE;


  Product_out1_gen: FOR t_05 IN 0 TO 3 GENERATE
    Product_mul_temp(t_05) <= MatrixMultiply_out1(t_05) * a1_signed(t_05);
    Product_out1(t_05) <= Product_mul_temp(t_05)(66 DOWNTO 12);
  END GENERATE Product_out1_gen;


  outputgen: FOR k IN 0 TO 3 GENERATE
    e1(k) <= std_logic_vector(Product_out1(k));
  END GENERATE;

END rtl;

