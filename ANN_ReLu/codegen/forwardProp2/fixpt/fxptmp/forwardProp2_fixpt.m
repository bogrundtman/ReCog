%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%          Generated by MATLAB 9.10 and Fixed-Point Designer 7.2           %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function [out_h1, w_h1, out_h2, w_h2, output] = forwardProp2_fixpt(weights_11,weights_12, weights_13,weights_14, weights_21,weights_22, weights_3, input)
    %Feed-forward function for network with 2 layers
    
     %since hdl coder does not like matrices as input, devide weight
    %matrices into vectors as input and then combine them to one nice
    %matrix.
    fm = get_fimath();

    weights_1 = fi(zeros(8,4), 1, 14, 10, fm);
    weights_1(:, 1) = weights_11;
    weights_1(:, 2) = weights_12;
    weights_1(:, 3) = weights_13;
    weights_1(:, 4) = weights_14;
    
    weights_2 = fi(zeros(4,2), 1, 14, 10, fm);
    weights_2(:, 1) = weights_21;
    weights_2(:, 2) = weights_22;
    
    out_h1 = fi(weights_1' * input, 1, 14, 2, fm);
    w_h1 = fi(out_h1, 1, 14, 2, fm);
    out_h1(:) = max(w_h1, fi(0, 0, 1, 0, fm));
    
    out_h2 = fi(weights_2' * out_h1, 1, 14, 1, fm);
    w_h2 = fi(out_h2, 1, 14, 1, fm);
    out_h2(:) = max(w_h2, fi(0, 0, 1, 0, fm));
    
    output = fi(weights_3' * out_h2, 1, 14, 0, fm);
end


function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
